-- local hydra = {
-- 	"⣴⣶⣤⡤⠦⣤⣀⣤⠆     ⣈⣭⣭⣿⣶⣿⣦⣼⣆          ",
-- 	"⠉⠻⢿⣿⠿⣿⣿⣶⣦⠤⠄⡠⢾⣿⣿⡿⠋⠉⠉⠻⣿⣿⡛⣦         ",
-- 	"      ⠈⢿⣿⣟⠦ ⣾⣿⣿⣷⠄⠄⠄⠄⠻⠿⢿⣿⣧⣄       ",
-- 	"       ⣸⣿⣿⢧ ⢻⠻⣿⣿⣷⣄⣀⠄⠢⣀⡀⠈⠙⠿⠄      ",
-- 	"      ⢠⣿⣿⣿⠈  ⠡⠌⣻⣿⣿⣿⣿⣿⣿⣿⣛⣳⣤⣀⣀     ",
-- 	"⢠⣧⣶⣥⡤⢄ ⣸⣿⣿⠘⠄ ⢀⣴⣿⣿⡿⠛⣿⣿⣧⠈⢿⠿⠟⠛⠻⠿⠄   ",
-- 	"⣰⣿⣿⠛⠻⣿⣿⡦⢹⣿⣷   ⢊⣿⣿⡏  ⢸⣿⣿⡇ ⢀⣠⣄⣾⠄   ",
-- 	"⣠⣿⠿⠛⠄⢀⣿⣿⣷⠘⢿⣿⣦⡀ ⢸⢿⣿⣿⣄ ⣸⣿⣿⡇⣪⣿⡿⠿⣿⣷⡄ ",
-- 	"⠙⠃   ⣼⣿⡟  ⠈⠻⣿⣿⣦⣌⡇⠻⣿⣿⣷⣿⣿⣿ ⣿⣿⡇⠄⠛⠻⢷⣄",
-- 	"    ⢻⣿⣿⣄   ⠈⠻⣿⣿⣿⣷⣿⣿⣿⣿⣿⡟ ⠫⢿⣿⡆     ",
-- 	"     ⠻⣿⣿⣿⣿⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⡟⢀⣀⣤⣾⡿⠃     ",
-- }
-- local header = {
-- 	" ███╗   ██╗ ███████╗ ██████╗  ██╗   ██╗ ██╗ ███╗   ███╗",
-- 	" ████╗  ██║ ██╔════╝██╔═══██╗ ██║   ██║ ██║ ████╗ ████║",
-- 	" ██╔██╗ ██║ █████╗  ██║   ██║ ██║   ██║ ██║ ██╔████╔██║",
-- 	" ██║╚██╗██║ ██╔══╝  ██║   ██║ ╚██╗ ██╔╝ ██║ ██║╚██╔╝██║",
-- 	" ██║ ╚████║ ███████╗╚██████╔╝  ╚████╔╝  ██║ ██║ ╚═╝ ██║",
-- 	" ╚═╝  ╚═══╝ ╚══════╝ ╚═════╝    ╚═══╝   ╚═╝ ╚═╝     ╚═╝",
-- }
a small test change
-- local kind_icons = {
-- 	Text = "",
-- 	Method = "󰆧",
-- 	Function = "󰊕",
-- 	Constructor = "",
-- 	Field = "󰇽",
-- 	Variable = "󰂡",
-- 	Class = "󰠱",
-- 	Interface = "",
-- 	Module = "",
-- 	Property = "󰜢",
-- 	Unit = "",
-- 	Value = "󰎠",
-- 	Enum = "",
-- 	Keyword = "󰌋",
-- 	Snippet = "",
-- 	Color = "󰏘",
-- 	File = "󰈙",
-- 	Reference = "",
-- 	Folder = "󰉋",
-- 	EnumMember = "",
-- 	Constant = "󰏿",
-- 	Struct = "",
-- 	Event = "",
-- 	Operator = "󰆕",
-- 	TypeParameter = "󰅲",
-- }
-- Splitting the header into lines
-- require("lazy").setup({
-- 	spec = {

-- FORMATTING, COLORS AND WINDOWDRESSING --

-- { "NFrid/due.nvim", opts = {} },
-- { "glts/vim-radical", dependencies = { "glts/vim-magnum" } },
-- { "andweeb/presence.nvim", opts = {}, event = "VeryLazy" },
-- {
-- 	"rasulomaroff/reactive.nvim",
-- 	event = "VeryLazy",
-- 	opts = {
-- 		load = { "catppuccin-mocha-cursor", "catppuccin-mocha-cursorline" },
-- 	},
-- },
-- {
-- 	"nvimdev/dashboard-nvim",
-- 	event = "VimEnter",
-- 	config = function()
-- 		require("dashboard").setup({
-- 			config = {
-- 				header = hydra,
-- 				shortcut = {},
-- 			},
-- 		})
-- 	end,
-- 	dependencies = { { "nvim-tree/nvim-web-devicons" } },
-- },

-- {
-- 	"numToStr/Comment.nvim",
-- 	event = { "BufReadPost", "BufWritePost", "BufNewFile" },
-- 	opts = {},
-- },

-- {
-- 	"j-hui/fidget.nvim",
-- 	opts = {
-- 		notification = {
-- 			window = {
-- 				winblend = 0,
-- 			},
-- 		},
-- 	},
-- 	event = { "BufReadPost", "BufWritePost", "BufNewFile" },
-- },

-- { "m-demare/hlargs.nvim", opts = {}, event = { "BufReadPost", "BufWritePost", "BufNewFile" } },

-- { "preservim/tagbar", cmd = "TagbarToggle" },

-- UTILITIES --
-- {
-- 	"gbprod/yanky.nvim",
-- 	opts = {
-- 		-- your configuration comes here
-- 		-- or leave it empty to use the default settings
-- 		-- refer to the configuration section below
-- 	},
-- 	event = "VeryLazy",
-- },

-- {
-- 	"folke/flash.nvim",
-- 	event = "VeryLazy",
-- 	opts = {
-- 		modes = { search = { enabled = false } } --[[ things you want to change go here]],
-- 	},
-- 	-- stylua: ignore
-- 	keys = {
-- 			{ "s", mode = { "n", "x", "o" }, function() require("flash").jump() end, desc = "Flash" },
-- 			{ "S", mode = { "n", "x", "o" }, function() require("flash").treesitter() end, desc = "Flash Treesitter" },
-- 			{ "r", mode = "o", function() require("flash").remote() end, desc = "Remote Flash" },
-- 			{ "R", mode = { "o", "x" }, function() require("flash").treesitter_search() end, desc = "Treesitter Search" },
-- 			{ "<c-s>", mode = { "c" }, function() require("flash").toggle() end, desc = "Toggle Flash Search" },
-- 	},
-- },

-- {
-- 	"ThePrimeagen/harpoon",
-- 	branch = "harpoon2",
-- 	dependencies = { "nvim-lua/plenary.nvim", "nvim-telescope/telescope.nvim" },
-- },

-- {
-- 	"tomiis4/Hypersonic.nvim",
-- 	event = "CmdlineEnter",
-- 	cmd = "Hypersonic",
-- 	config = function()
-- 		require("hypersonic").setup({
-- 			-- config
-- 		})
-- 	end,
-- },

-- {
-- 	"smjonas/inc-rename.nvim",
-- 	event = { "BufReadPost", "BufWritePost", "BufNewFile" },
-- 	config = function()
-- 		require("inc_rename").setup()
-- 	end,
-- },

-- LaTeX Ascii art generator
-- { "jbyuki/nabla.nvim" },

-- {
-- 	"nvim-neorg/neorg",
-- 	cmd = "Neorg",
-- 	ft = "norg",
-- 	-- lazy = false, -- Disable lazy loading as some `lazy.nvim` distributions set `lazy = true` by default
-- 	version = "*", -- Pin Neorg to the latest stable release
-- 	config = true,
-- 	opts = {
-- 		load = {
-- 			["core.defaults"] = {},
-- 			["core.dirman"] = {
-- 				config = {
-- 					workspaces = {
-- 						notes = "~/Documents/Notes",
-- 						mitschrift = "~/Documents/Mitschrift-Norg",
-- 					},
-- 				},
-- 			},
-- 			["core.concealer"] = {},
-- 			["core.completion"] = {
-- 				config = {
-- 					engine = "nvim-cmp",
-- 				},
-- 			},
-- 			["core.integrations.nvim-cmp"] = {},
-- 			["core.text-objects"] = {},
-- 			["core.integrations.telescope"] = {},
-- 		},
-- 	},
-- 	dependencies = { { "nvim-lua/plenary.nvim" }, { "nvim-neorg/neorg-telescope" } },
-- },
--
-- {
-- 	"kylechui/nvim-surround",
-- 	version = "*", -- Use for stability; omit to use `main` branch for the latest features
-- 	event = "VeryLazy",
-- 	config = function()
-- 		require("nvim-surround").setup({
-- 			-- Configuration here, or leave empty to use defaults
-- 		})
-- 	end,
-- },
-- {
-- 	"m4xshen/hardtime.nvim",
-- 	dependencies = { "MunifTanjim/nui.nvim", "nvim-lua/plenary.nvim" },
-- 	opts = {},
-- },

-- {
-- 	"Bekaboo/dropbar.nvim",
-- 	-- optional, but required for fuzzy finder support
-- 	dependencies = {
-- 		"nvim-telescope/telescope-fzf-native.nvim",
-- 	},
-- },

-- LSP SUPPORT --

-- 	},
--
-- 	install = { colorscheme = { "catppuccin-mocha" } },
-- 	checker = { enabled = true },
-- })



local harpoon = require("harpoon")
harpoon:setup({})

-- basic telescope configuration
local conf = require("telescope.config").values
local function toggle_telescope(harpoon_files)
	local file_paths = {}
	for _, item in ipairs(harpoon_files.items) do
		table.insert(file_paths, item.value)
	end

	require("telescope.pickers")
		.new({}, {
			prompt_title = "Harpoon",
			finder = require("telescope.finders").new_table({
				results = file_paths,
			}),
			previewer = conf.file_previewer({}),
			sorter = conf.generic_sorter({}),
		})
		:find()
end
vim.keymap.set("n", "<C-e>", function()
	toggle_telescope(harpoon:list())
end, { desc = "Open harpoon window" })
